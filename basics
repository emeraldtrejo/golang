var x int
keyword - name - type

type Celsius float64
type IDnum int

var temp Celcius
var pid IDnum

var x int = 100
var x = 100

x := 100



#code blocks are wrapped with braces
#starting brace on same line as preceding statement
sum := 0
for i :=0; i < 10; i++ {
sum +=i
}
fmt.Println(sum) //prints '45'

len(string)  #returns the length of a string
panic(error) #stops execution and displays error message
recover() #manages behavior of panicking goroutine


#on command line changes to correct formatting and w is to write the file
gofmt -w filename.go 

#command lines
md gowork 
cd gowork
md src  #make the source
md bin  #executables
md pkg  #make package objects
set GOPATH=c:\gowork

go env

cd src
md palindrome
cd palindrome


set GOOS = darwin
go install

#explicity typing
var anInteger int = 42
var aString string = "This is go!"
const anInteger int = 42

#implicit typing
anInteger := 42
aString := "This is go!"
const aString = "This is go!"

#fixed integer types
uint8 unit16 unit32 unit64
int 8 int16 int32 int64




